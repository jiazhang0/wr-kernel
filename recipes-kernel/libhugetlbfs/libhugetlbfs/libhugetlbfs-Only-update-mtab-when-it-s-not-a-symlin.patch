From 7864c9d930643cc77ebf6f94609a3af5a986a82e Mon Sep 17 00:00:00 2001
From: Yang Shi <yang.shi@windriver.com>
Date: Fri, 23 Aug 2013 14:55:02 -0700
Subject: [PATCH 4/4] libhugetlbfs: Only update mtab when it's not a symlink
 to /proc

/etc/mtab can be a symlink to /proc/mounts. In this case there is no need to
update mtab. Otherwise it would fail with:

    hugeadm:WARNING: Unable to add entry /var/lib/hugetlbfs/pagesize-4MB to /etc/mtab, error: Invalid argument

Signed-off-by: Yang Shi <yang.shi@windriver.com>
---
 hugeadm.c |   47 ++++++++++++++++++++++++++++++++---------------
 1 files changed, 32 insertions(+), 15 deletions(-)

diff --git a/hugeadm.c b/hugeadm.c
index 781f23c..665763c 100644
--- a/hugeadm.c
+++ b/hugeadm.c
@@ -500,6 +500,20 @@ int ensure_dir(char *path, mode_t mode, uid_t uid, gid_t gid)
 	return 0;
 }
 
+#define PROC_DIR "/proc/"
+static int mtab_is_proc(const char *mtab)
+{
+	char path[16];
+
+	if (readlink(mtab, path, sizeof(path)) < 0)
+		return 0;
+
+	if (strncmp(path, PROC_DIR, strlen(PROC_DIR)))
+		return 0;
+
+	return 1;
+}
+
 int check_if_already_mounted(struct mount_list *list, char *path)
 {
 	while (list) {
@@ -552,21 +566,24 @@ int mount_dir(char *path, char *options, mode_t mode, uid_t uid, gid_t gid)
 			return 1;
 		}
 
-		mounts = setmntent(MOUNTED, "a+");
-		if (mounts) {
-			entry.mnt_fsname = FS_NAME;
-			entry.mnt_dir = path;
-			entry.mnt_type = FS_NAME;
-			entry.mnt_opts = options;
-			entry.mnt_freq = 0;
-			entry.mnt_passno = 0;
-			if (addmntent(mounts, &entry))
-				WARNING("Unable to add entry %s to %s, error: %s\n",
-					path, MOUNTED, strerror(errno));
-			endmntent(mounts);
-		} else {
-			WARNING("Unable to open %s, error: %s\n",
-				MOUNTED, strerror(errno));
+		/* Only update mtab if it's not linked to any file in /proc direcotry.*/
+		if (!mtab_is_proc(MOUNTED)) {
+			mounts = setmntent(MOUNTED, "a+");
+			if (mounts) {
+				entry.mnt_fsname = FS_NAME;
+				entry.mnt_dir = path;
+				entry.mnt_type = FS_NAME;
+				entry.mnt_opts = options;
+				entry.mnt_freq = 0;
+				entry.mnt_passno = 0;
+				if (addmntent(mounts, &entry))
+					WARNING("Unable to add entry %s to %s, error: %s\n",
+						path, MOUNTED, strerror(errno));
+				endmntent(mounts);
+			} else {
+				WARNING("Unable to open %s, error: %s\n",
+					MOUNTED, strerror(errno));
+			}
 		}
 
 		if (chown(path, uid, gid)) {
-- 
1.7.5.4

